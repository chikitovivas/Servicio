/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package sibym;

import java.awt.Button;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JTextField;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Yanir
 */



public class Proveedores extends javax.swing.JFrame {

    /**
     * Creates new form Proveedores
     */
    
    private TextField info [] = new TextField [7];
    
    public Proveedores() throws SQLException {
        initComponents();
        this.setTitle("Proveedores.");
     
       Statement st = null; 
       Connection con = null;
       
        try {
           try {
               Class.forName("com.mysql.jdbc.Driver").newInstance();
           } catch (InstantiationException ex) {
               Logger.getLogger(Cam.class.getName()).log(Level.SEVERE, null, ex);
           } catch (IllegalAccessException ex) {
               Logger.getLogger(Cam.class.getName()).log(Level.SEVERE, null, ex);
           }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Cam.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            con = DriverManager.getConnection("jdbc:mysql://localhost/servi_cam", "root", "");

            st  = con.createStatement();
            
                
            
            ResultSet rs = null;
                    
            rs = st.executeQuery("SELECT RazonSocial FROM proveedor;");
            
            int i;
            
            for(i=0; rs.next(); i++);
            
            rs.beforeFirst();
            String razones []= new String [i];  
            for(i=0; rs.next(); i++)
            {
             System.out.println( razones [i] = rs.getString("RazonSocial"));
            }
            
            
            
            
            rs.close();
  
            for (i = 0; i<=razones.length-1;i++)
            proveedoreslist.add(razones[i]);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Razons = new javax.swing.JLabel();
        Rif = new javax.swing.JLabel();
        Tlf = new javax.swing.JLabel();
        Fax = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Razonslabel = new javax.swing.JLabel();
        Riflabel = new javax.swing.JLabel();
        Tlflabel = new javax.swing.JLabel();
        Faxlabel = new javax.swing.JLabel();
        Personalabel = new javax.swing.JLabel();
        Direccionlabel = new javax.swing.JLabel();
        proveedoreslist = new java.awt.List();
        Editar = new javax.swing.JButton();
        ServicioList = new java.awt.List();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Razons.setText("Razon Social.");

        Rif.setText("Rif.");

        Tlf.setText("Telefono(s).");

        Fax.setText("Fax.");

        jLabel1.setText("Persona de contacto.");

        jLabel2.setText("Direcci√≥n.");

        jLabel3.setText("Servicio.");

        Razonslabel.setText("                          ");

        proveedoreslist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proveedoreslistActionPerformed(evt);
            }
        });

        Editar.setText("Editar.");
        Editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarActionPerformed(evt);
            }
        });

        ServicioList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ServicioListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(proveedoreslist, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Fax)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(Rif)
                    .addComponent(Razons)
                    .addComponent(Tlf)
                    .addComponent(Editar, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Razonslabel, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                    .addComponent(Riflabel)
                    .addComponent(Tlflabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Faxlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Personalabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Direccionlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ServicioList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(proveedoreslist, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Razons)
                            .addComponent(Razonslabel))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Rif)
                            .addComponent(Riflabel))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Tlf)
                            .addComponent(Tlflabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Faxlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Fax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Personalabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Direccionlabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(ServicioList, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Editar)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void proveedoreslistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_proveedoreslistActionPerformed

        ServicioList.removeAll();
        String selecci√≥n;
        Object [] proveedor = new Object [9] ;
        selecci√≥n = proveedoreslist.getSelectedItem();
        
         DefaultListModel modelo = new DefaultListModel();  
       // ServicioList.setModel(modelo);
        
       Statement st = null; 
       Connection con = null;
       
        try {
           try {
               Class.forName("com.mysql.jdbc.Driver").newInstance();
           } catch (InstantiationException ex) {
               Logger.getLogger(Cam.class.getName()).log(Level.SEVERE, null, ex);
           } catch (IllegalAccessException ex) {
               Logger.getLogger(Cam.class.getName()).log(Level.SEVERE, null, ex);
           }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Cam.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {        
            con = DriverManager.getConnection("jdbc:mysql://localhost/servi_cam", "root", "");
        } catch (SQLException ex) {
            Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            st  = con.createStatement();
        } catch (SQLException ex) {
            Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
            
                
            
        ResultSet rs = null;
    
            
       
        try {            
            rs = st.executeQuery("SELECT * FROM proveedor WHERE RazonSocial = '" +selecci√≥n+"'");
        } catch (SQLException ex) {
            Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        try {
            rs.beforeFirst();
        } catch (SQLException ex) {
            Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
 
        
        try {
             while (rs.next())
            { 
                proveedor [0] = rs.getString("RazonSocial");
                proveedor [1] = rs.getString("Rif");
                proveedor [2] = rs.getString("tlf1");
                proveedor [3] = rs.getString("tlf2");
                proveedor [4] = rs.getString("fax");
                proveedor [5] = rs.getString("Contacto");
                proveedor [6] = rs.getString("Direcion");

            }
        } catch (SQLException ex) {
            Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
     
           
        
        try {            
            rs = st.executeQuery("SELECT Descripcion FROM tipo_servicio INNER JOIN tipo_servicio_has_proveedor as tp ON ( tp.Proveedor_Rif = '"+proveedor [1]+"' ) AND (  tipo_servicio.idTipo_Servicio = tp.Tipo_Servicio_idTipo_Servicio);");
        } catch (SQLException ex) {
            Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        try {
            rs.beforeFirst();
        } catch (SQLException ex) {
            Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        Razonslabel.setText(proveedor[0].toString());
        Riflabel.setText(proveedor[1].toString());
        Tlflabel.setText(proveedor[2].toString() + " - " + proveedor[3].toString());
        Faxlabel.setText(proveedor[4].toString());
        Personalabel.setText(proveedor[5].toString());
        Direccionlabel.setText(proveedor[6].toString());
       
        try {
             while (rs.next())
            { 
                ServicioList.add(rs.getString("Descripcion"));
           
            }
        } catch (SQLException ex) {
            Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
        }
     
       // ServicioList.setModel(modelo);
     
       // ServicioList.setModel(modelo);
       
        
        
    }//GEN-LAST:event_proveedoreslistActionPerformed

    private void EditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarActionPerformed
       
       
       final Button btn = new  Button ("Aceptar");
       final Button btn2 = new Button ("Editar servicios");
       int index = Tlflabel.getText().indexOf(" - ");
   
       info [0] = new TextField(Razonslabel.getText());      
       info [1] = new TextField(Riflabel.getText());
       info [2] = new TextField(Tlflabel.getText().substring(0,index));
       info [3] = new TextField(Tlflabel.getText().substring(index+3));
       info [4] = new TextField(Faxlabel.getText());
       info [5] = new TextField(Personalabel.getText());
       info [6] = new TextField(Direccionlabel.getText());
       
      /* 
       this.getContentPane().remove(Razonslabel);
       this.getContentPane().remove(Riflabel);
       this.getContentPane().remove(Tlflabel);
       this.getContentPane().remove(Faxlabel);
       this.getContentPane().remove(Personalabel);
       this.getContentPane().remove(Direccionlabel);
       this.getContentPane().remove(Editar);
       this.getContentPane().remove(ServicioList);
       this.repaint();
       */
       
       Razonslabel.setVisible(false);
       Riflabel.setVisible(false);
       Tlflabel.setVisible(false);
       Faxlabel.setVisible(false);
       Personalabel.setVisible(false);
       Direccionlabel.setVisible(false);
       Editar.setVisible(false);
       ServicioList.setVisible(false);
               
               
               
               
       btn.setBounds(230, 300, 90, 30);
       btn2.setBounds(450, 260, 200, 30);
       this.add(btn2);
       this.add(btn);
       for (int i=0, y= 37; i<7 ; i++, y+=35){
           
            if (i == 2 || i == 3){
                info [2].setBounds(430, 114, 120, 25);
                info [3].setBounds(550, 114, 120, 25);
                y=114;
         }else{
                info [i].setBounds(430, y, 250, 25);
            }
           
            
            this.add(info[i]);
            
       }
       
       /*Accion del boton editar servicios */
       btn2.addActionListener(new ActionListener() {

           @Override
           public void actionPerformed(ActionEvent e) {
               try {
                   
                   Serviciosasociados serv = new Serviciosasociados();
                   serv.EditarServicioProveedor(info[1].getText());
                   serv.setVisible(true);
               } catch (SQLException ex) {
                   Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
               }
           }
       });
       
       
       btn.addActionListener(new ActionListener() {

           @Override
           public void actionPerformed(ActionEvent e) {
               

            Statement st = null; 
            Connection con = null;

            try {
                try {
                    Class.forName("com.mysql.jdbc.Driver").newInstance();
                } catch (InstantiationException ex) {
                    Logger.getLogger(Cam.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(Cam.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (ClassNotFoundException ex) {
                 Logger.getLogger(Cam.class.getName()).log(Level.SEVERE, null, ex);
            }
             try {        
                 con = DriverManager.getConnection("jdbc:mysql://localhost/servi_cam", "root", "");
             } catch (SQLException ex) {
                 Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
             }
             try {
                 st  = con.createStatement();
             } catch (SQLException ex) {
                 Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
             }


     
               
               
               
               
            try {
                st.execute("UPDATE proveedor "
                        + " SET Rif = '"+info [1].getText()+"', RazonSocial = '"+info [0].getText()+ "', Direcion = '"+info [6].getText()+"', Fax = "+info [4].getText()+" , Tlf1 = '"+info [2].getText()+"' , Tlf2 = "+info [3].getText()+" , Contacto = '"+info [5].getText()+"' "
                        + "  WHERE Rif = '"+info [1].getText()+"' ;");
            } catch (SQLException ex) {
                Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
            }
                
            
             System.out.println("aqui llegue jefe");
          
            
            Razonslabel.setText(info [0].getText());
            Riflabel.setText(info [1].getText());
            Tlflabel.setText(info [2].getText() + " - " + info [3].getText());
            Faxlabel.setText(info [4].getText());
            Personalabel.setText(info [5].getText());
            Direccionlabel.setText(info [6].getText());
            
            
            
            ResultSet rs = null;
            
              
            try {            
                rs = st.executeQuery("SELECT Descripcion FROM tipo_servicio INNER JOIN tipo_servicio_has_proveedor as tp ON ( tp.Proveedor_Rif = '"+info [1].getText()+"' ) AND (  tipo_servicio.idTipo_Servicio = tp.Tipo_Servicio_idTipo_Servicio);");
            } catch (SQLException ex) {
                Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            ServicioList.removeAll();
            
            try {
                while (rs.next())
                {
                    ServicioList.add(rs.getString("Descripcion"));

                }  } catch (SQLException ex) {
                Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
            }
                
            
            for(int i =0; i<=6; i++)
            info [i].setVisible(false);
            btn.setVisible(false);
            btn2.setVisible(false);
            
            Razonslabel.setVisible(true);
            Riflabel.setVisible(true); 
            Tlflabel.setVisible(true);
            Faxlabel.setVisible(true);
            Personalabel.setVisible(true);
            Direccionlabel.setVisible(true);
            Editar.setVisible(true);
            ServicioList.setVisible(true);
            
           }
       });
       
       
    }//GEN-LAST:event_EditarActionPerformed

    private void ServicioListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ServicioListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ServicioListActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Proveedores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 try {
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());  
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(NuevoCam.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    Logger.getLogger(NuevoCam.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    Logger.getLogger(NuevoCam.class.getName()).log(Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(NuevoCam.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    new Proveedores().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Direccionlabel;
    private javax.swing.JButton Editar;
    private javax.swing.JLabel Fax;
    private javax.swing.JLabel Faxlabel;
    private javax.swing.JLabel Personalabel;
    private javax.swing.JLabel Razons;
    private javax.swing.JLabel Razonslabel;
    private javax.swing.JLabel Rif;
    private javax.swing.JLabel Riflabel;
    private java.awt.List ServicioList;
    private javax.swing.JLabel Tlf;
    private javax.swing.JLabel Tlflabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private java.awt.List proveedoreslist;
    // End of variables declaration//GEN-END:variables
}
